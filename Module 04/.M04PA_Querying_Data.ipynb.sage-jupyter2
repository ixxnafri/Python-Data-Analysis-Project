{"type":"settings","kernel":"python3","backend_state":"running","trust":true,"metadata":{"language_info":{"codemirror_mode":{"name":"ipython","version":3},"file_extension":".py","mimetype":"text/x-python","name":"python","nbconvert_exporter":"python","pygments_lexer":"ipython3","version":"3.5.2"}},"kernel_state":"idle"}
{"type":"file","last_load":1505981205502}
{"type":"cell","id":"e3763e","pos":1,"input":"#load your packages\n%matplotlib inline\nimport pandas as pd\nimport matplotlib.pyplot as plt\ncomplaints = pd.read_csv('31l-service-calls-ny.cvs')","cell_type":"code","exec_count":30}
{"type":"cell","id":"8a09bb","pos":36,"input":"Now we can store the total noise counts by Borough into the variable noise_complaint_counts, and count the total complaints in order to normalize our data.","cell_type":"markdown"}
{"type":"cell","id":"d03ec2","pos":12,"input":"complaints[['Complaint Type', 'Borough']][:10]","output":{"0":{"data":{"text/html":"<div>\n<style>\n    .dataframe thead tr:only-child th {\n        text-align: right;\n    }\n\n    .dataframe thead th {\n        text-align: left;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Complaint Type</th>\n      <th>Borough</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>Noise - Street/Sidewalk</td>\n      <td>QUEENS</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>Illegal Parking</td>\n      <td>QUEENS</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>Noise - Commercial</td>\n      <td>MANHATTAN</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>Noise - Vehicle</td>\n      <td>MANHATTAN</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>Rodent</td>\n      <td>MANHATTAN</td>\n    </tr>\n    <tr>\n      <th>5</th>\n      <td>Noise - Commercial</td>\n      <td>QUEENS</td>\n    </tr>\n    <tr>\n      <th>6</th>\n      <td>Blocked Driveway</td>\n      <td>QUEENS</td>\n    </tr>\n    <tr>\n      <th>7</th>\n      <td>Noise - Commercial</td>\n      <td>QUEENS</td>\n    </tr>\n    <tr>\n      <th>8</th>\n      <td>Noise - Commercial</td>\n      <td>MANHATTAN</td>\n    </tr>\n    <tr>\n      <th>9</th>\n      <td>Noise - Commercial</td>\n      <td>BROOKLYN</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"output_type":"execute_result","exec_count":7}},"cell_type":"code","exec_count":7}
{"type":"cell","id":"585636","pos":8,"input":"Note that the order of the column selection and row selection does not matter.","cell_type":"markdown"}
{"type":"cell","id":"3a7c69","pos":25,"input":"<h2>NumPy and Pandas</h2>\nOn the inside, the type of a column is pd.Series.\nbut pandas Series are internally numpy arrays. If you add .values to the end of any Series, you'll get its internal numpy array. We will explore this trait with a simplified pandas series.","cell_type":"markdown"}
{"type":"cell","id":"bc486c","pos":32,"input":"arr[arr !=2]","output":{"0":{"data":{"text/plain":"array([1, 3])"},"output_type":"execute_result","exec_count":17}},"cell_type":"code","exec_count":17}
{"type":"cell","id":"3ed2f2","pos":13,"input":"<h2>#3 Counting string types or other data</h2>\n<p>Want to know the most common complaint type? This is a really easy question to answer! There's a .value_counts() method that we can use:</p>","cell_type":"markdown"}
{"type":"cell","id":"8adbd2","pos":0,"input":"<h1>Module 04 Part B: Querying Data in Python</h1>\n<p>Now that we can read in a file in pandas, we should learn a few techniques to quickly query our dataframes. The intent of this exercise is to demonstrate how to deal with larger datasets with mixed variable types. This data is a subset of the of 311 service requests from NYC Open Data.</p>","cell_type":"markdown"}
{"type":"cell","id":"e891a0","pos":35,"input":"","cell_type":"code","exec_count":0}
{"type":"cell","id":"a8d8f8","pos":34,"input":"is_noise = complaints['Complaint Type'] == \"Noise - Street/Sidewalk\"\nnoise_complaints = complaints[is_noise]\nnoise_complaints['Borough'].value_counts()","output":{"0":{"data":{"text/plain":"MANHATTAN        26\nBRONX             9\nBROOKLYN          8\nQUEENS            6\nSTATEN ISLAND     3\nName: Borough, dtype: int64"},"output_type":"execute_result","exec_count":18}},"cell_type":"code","exec_count":18}
{"type":"cell","id":"0a3ff7","pos":20,"input":"noise_complaints = complaints[complaints['Complaint Type'] == \"Noise - Street/Sidewalk\"]\nnoise_complaints[:3]","output":{"0":{"data":{"text/html":"<div>\n<style>\n    .dataframe thead tr:only-child th {\n        text-align: right;\n    }\n\n    .dataframe thead th {\n        text-align: left;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Unnamed: 0</th>\n      <th>Unique Key</th>\n      <th>Created Date</th>\n      <th>Closed Date</th>\n      <th>Agency</th>\n      <th>Agency Name</th>\n      <th>Complaint Type</th>\n      <th>Descriptor</th>\n      <th>Location Type</th>\n      <th>Incident Zip</th>\n      <th>...</th>\n      <th>Bridge Highway Name</th>\n      <th>Bridge Highway Direction</th>\n      <th>Road Ramp</th>\n      <th>Bridge Highway Segment</th>\n      <th>Garage Lot Name</th>\n      <th>Ferry Direction</th>\n      <th>Ferry Terminal Name</th>\n      <th>Latitude</th>\n      <th>Longitude</th>\n      <th>Location</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>0</td>\n      <td>26589651</td>\n      <td>10/31/2013 02:08:41 AM</td>\n      <td>NaN</td>\n      <td>NYPD</td>\n      <td>New York City Police Department</td>\n      <td>Noise - Street/Sidewalk</td>\n      <td>Loud Talking</td>\n      <td>Street/Sidewalk</td>\n      <td>11432.0</td>\n      <td>...</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>40.708275</td>\n      <td>-73.791604</td>\n      <td>(40.70827532593202, -73.79160395779721)</td>\n    </tr>\n    <tr>\n      <th>16</th>\n      <td>16</td>\n      <td>26594086</td>\n      <td>10/31/2013 12:54:03 AM</td>\n      <td>10/31/2013 02:16:39 AM</td>\n      <td>NYPD</td>\n      <td>New York City Police Department</td>\n      <td>Noise - Street/Sidewalk</td>\n      <td>Loud Music/Party</td>\n      <td>Street/Sidewalk</td>\n      <td>10310.0</td>\n      <td>...</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>40.636182</td>\n      <td>-74.116150</td>\n      <td>(40.63618202176914, -74.1161500428337)</td>\n    </tr>\n    <tr>\n      <th>25</th>\n      <td>25</td>\n      <td>26591573</td>\n      <td>10/31/2013 12:35:18 AM</td>\n      <td>10/31/2013 02:41:35 AM</td>\n      <td>NYPD</td>\n      <td>New York City Police Department</td>\n      <td>Noise - Street/Sidewalk</td>\n      <td>Loud Talking</td>\n      <td>Street/Sidewalk</td>\n      <td>10312.0</td>\n      <td>...</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>40.553421</td>\n      <td>-74.196743</td>\n      <td>(40.55342078716953, -74.19674315017886)</td>\n    </tr>\n  </tbody>\n</table>\n<p>3 rows Ã— 53 columns</p>\n</div>"},"output_type":"execute_result","exec_count":11}},"cell_type":"code","exec_count":11}
{"type":"cell","id":"aed7a8","pos":28,"input":"pd.Series([1,2,3])","output":{"0":{"data":{"text/plain":"0    1\n1    2\n2    3\ndtype: int64"},"output_type":"execute_result","exec_count":15}},"cell_type":"code","exec_count":15}
{"type":"cell","id":"09d318","pos":37,"input":"noise_complaint_counts = noise_complaints['Borough'].value_counts()\ncomplaint_counts = complaints['Borough'].value_counts()","cell_type":"code","exec_count":22}
{"type":"cell","id":"15e1a5","pos":11,"input":"complaints[['Complaint Type', 'Borough']]","output":{"0":{"data":{"text/html":"<div>\n<style>\n    .dataframe thead tr:only-child th {\n        text-align: right;\n    }\n\n    .dataframe thead th {\n        text-align: left;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Complaint Type</th>\n      <th>Borough</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>Noise - Street/Sidewalk</td>\n      <td>QUEENS</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>Illegal Parking</td>\n      <td>QUEENS</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>Noise - Commercial</td>\n      <td>MANHATTAN</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>Noise - Vehicle</td>\n      <td>MANHATTAN</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>Rodent</td>\n      <td>MANHATTAN</td>\n    </tr>\n    <tr>\n      <th>5</th>\n      <td>Noise - Commercial</td>\n      <td>QUEENS</td>\n    </tr>\n    <tr>\n      <th>6</th>\n      <td>Blocked Driveway</td>\n      <td>QUEENS</td>\n    </tr>\n    <tr>\n      <th>7</th>\n      <td>Noise - Commercial</td>\n      <td>QUEENS</td>\n    </tr>\n    <tr>\n      <th>8</th>\n      <td>Noise - Commercial</td>\n      <td>MANHATTAN</td>\n    </tr>\n    <tr>\n      <th>9</th>\n      <td>Noise - Commercial</td>\n      <td>BROOKLYN</td>\n    </tr>\n    <tr>\n      <th>10</th>\n      <td>Noise - House of Worship</td>\n      <td>BROOKLYN</td>\n    </tr>\n    <tr>\n      <th>11</th>\n      <td>Noise - Commercial</td>\n      <td>MANHATTAN</td>\n    </tr>\n    <tr>\n      <th>12</th>\n      <td>Illegal Parking</td>\n      <td>MANHATTAN</td>\n    </tr>\n    <tr>\n      <th>13</th>\n      <td>Noise - Vehicle</td>\n      <td>BRONX</td>\n    </tr>\n    <tr>\n      <th>14</th>\n      <td>Rodent</td>\n      <td>BROOKLYN</td>\n    </tr>\n    <tr>\n      <th>15</th>\n      <td>Noise - House of Worship</td>\n      <td>MANHATTAN</td>\n    </tr>\n    <tr>\n      <th>16</th>\n      <td>Noise - Street/Sidewalk</td>\n      <td>STATEN ISLAND</td>\n    </tr>\n    <tr>\n      <th>17</th>\n      <td>Illegal Parking</td>\n      <td>BROOKLYN</td>\n    </tr>\n    <tr>\n      <th>18</th>\n      <td>Street Light Condition</td>\n      <td>BROOKLYN</td>\n    </tr>\n    <tr>\n      <th>19</th>\n      <td>Noise - Commercial</td>\n      <td>MANHATTAN</td>\n    </tr>\n    <tr>\n      <th>20</th>\n      <td>Noise - House of Worship</td>\n      <td>BROOKLYN</td>\n    </tr>\n    <tr>\n      <th>21</th>\n      <td>Noise - Commercial</td>\n      <td>MANHATTAN</td>\n    </tr>\n    <tr>\n      <th>22</th>\n      <td>Noise - Vehicle</td>\n      <td>QUEENS</td>\n    </tr>\n    <tr>\n      <th>23</th>\n      <td>Noise - Commercial</td>\n      <td>BROOKLYN</td>\n    </tr>\n    <tr>\n      <th>24</th>\n      <td>Blocked Driveway</td>\n      <td>STATEN ISLAND</td>\n    </tr>\n    <tr>\n      <th>25</th>\n      <td>Noise - Street/Sidewalk</td>\n      <td>STATEN ISLAND</td>\n    </tr>\n    <tr>\n      <th>26</th>\n      <td>Street Light Condition</td>\n      <td>BROOKLYN</td>\n    </tr>\n    <tr>\n      <th>27</th>\n      <td>Harboring Bees/Wasps</td>\n      <td>MANHATTAN</td>\n    </tr>\n    <tr>\n      <th>28</th>\n      <td>Noise - Street/Sidewalk</td>\n      <td>MANHATTAN</td>\n    </tr>\n    <tr>\n      <th>29</th>\n      <td>Street Light Condition</td>\n      <td>STATEN ISLAND</td>\n    </tr>\n    <tr>\n      <th>...</th>\n      <td>...</td>\n      <td>...</td>\n    </tr>\n    <tr>\n      <th>3770</th>\n      <td>HEATING</td>\n      <td>MANHATTAN</td>\n    </tr>\n    <tr>\n      <th>3771</th>\n      <td>GENERAL CONSTRUCTION</td>\n      <td>BRONX</td>\n    </tr>\n    <tr>\n      <th>3772</th>\n      <td>HEATING</td>\n      <td>BROOKLYN</td>\n    </tr>\n    <tr>\n      <th>3773</th>\n      <td>HEATING</td>\n      <td>QUEENS</td>\n    </tr>\n    <tr>\n      <th>3774</th>\n      <td>HEATING</td>\n      <td>BROOKLYN</td>\n    </tr>\n    <tr>\n      <th>3775</th>\n      <td>HEATING</td>\n      <td>BROOKLYN</td>\n    </tr>\n    <tr>\n      <th>3776</th>\n      <td>HEATING</td>\n      <td>BROOKLYN</td>\n    </tr>\n    <tr>\n      <th>3777</th>\n      <td>GENERAL CONSTRUCTION</td>\n      <td>MANHATTAN</td>\n    </tr>\n    <tr>\n      <th>3778</th>\n      <td>HEATING</td>\n      <td>QUEENS</td>\n    </tr>\n    <tr>\n      <th>3779</th>\n      <td>PAINT - PLASTER</td>\n      <td>QUEENS</td>\n    </tr>\n    <tr>\n      <th>3780</th>\n      <td>HEATING</td>\n      <td>BRONX</td>\n    </tr>\n    <tr>\n      <th>3781</th>\n      <td>HEATING</td>\n      <td>MANHATTAN</td>\n    </tr>\n    <tr>\n      <th>3782</th>\n      <td>GENERAL CONSTRUCTION</td>\n      <td>BROOKLYN</td>\n    </tr>\n    <tr>\n      <th>3783</th>\n      <td>PLUMBING</td>\n      <td>BROOKLYN</td>\n    </tr>\n    <tr>\n      <th>3784</th>\n      <td>NONCONST</td>\n      <td>BRONX</td>\n    </tr>\n    <tr>\n      <th>3785</th>\n      <td>HEATING</td>\n      <td>MANHATTAN</td>\n    </tr>\n    <tr>\n      <th>3786</th>\n      <td>HEATING</td>\n      <td>QUEENS</td>\n    </tr>\n    <tr>\n      <th>3787</th>\n      <td>PLUMBING</td>\n      <td>MANHATTAN</td>\n    </tr>\n    <tr>\n      <th>3788</th>\n      <td>HEATING</td>\n      <td>MANHATTAN</td>\n    </tr>\n    <tr>\n      <th>3789</th>\n      <td>NONCONST</td>\n      <td>BRONX</td>\n    </tr>\n    <tr>\n      <th>3790</th>\n      <td>NONCONST</td>\n      <td>BROOKLYN</td>\n    </tr>\n    <tr>\n      <th>3791</th>\n      <td>APPLIANCE</td>\n      <td>MANHATTAN</td>\n    </tr>\n    <tr>\n      <th>3792</th>\n      <td>HEATING</td>\n      <td>BRONX</td>\n    </tr>\n    <tr>\n      <th>3793</th>\n      <td>GENERAL CONSTRUCTION</td>\n      <td>MANHATTAN</td>\n    </tr>\n    <tr>\n      <th>3794</th>\n      <td>GENERAL CONSTRUCTION</td>\n      <td>MANHATTAN</td>\n    </tr>\n    <tr>\n      <th>3795</th>\n      <td>HEATING</td>\n      <td>BRONX</td>\n    </tr>\n    <tr>\n      <th>3796</th>\n      <td>PAINT - PLASTER</td>\n      <td>BROOKLYN</td>\n    </tr>\n    <tr>\n      <th>3797</th>\n      <td>NONCONST</td>\n      <td>BRONX</td>\n    </tr>\n    <tr>\n      <th>3798</th>\n      <td>HEATING</td>\n      <td>QUEENS</td>\n    </tr>\n    <tr>\n      <th>3799</th>\n      <td>PLUMBING</td>\n      <td>BRONX</td>\n    </tr>\n  </tbody>\n</table>\n<p>3800 rows Ã— 2 columns</p>\n</div>"},"output_type":"execute_result","exec_count":6}},"cell_type":"code","exec_count":6}
{"type":"cell","id":"2879c7","pos":19,"input":"<h2>#5 Query data in search of specific strings or values</h2>\n<p>Searching for specific data types is made simple with pandas. In the statement below you are asking python to search all complaint types for the string \"Noise - Street/Sidewalk\".</p>","cell_type":"markdown"}
{"type":"cell","id":"861653","pos":6,"input":"Or you can select the first five elements of column as follows:","cell_type":"markdown"}
{"type":"cell","id":"02105b","pos":3,"input":"complaints['Complaint Type']","output":{"0":{"data":{"text/plain":"0        Noise - Street/Sidewalk\n1                Illegal Parking\n2             Noise - Commercial\n3                Noise - Vehicle\n4                         Rodent\n5             Noise - Commercial\n6               Blocked Driveway\n7             Noise - Commercial\n8             Noise - Commercial\n9             Noise - Commercial\n10      Noise - House of Worship\n11            Noise - Commercial\n12               Illegal Parking\n13               Noise - Vehicle\n14                        Rodent\n15      Noise - House of Worship\n16       Noise - Street/Sidewalk\n17               Illegal Parking\n18        Street Light Condition\n19            Noise - Commercial\n20      Noise - House of Worship\n21            Noise - Commercial\n22               Noise - Vehicle\n23            Noise - Commercial\n24              Blocked Driveway\n25       Noise - Street/Sidewalk\n26        Street Light Condition\n27          Harboring Bees/Wasps\n28       Noise - Street/Sidewalk\n29        Street Light Condition\n                  ...           \n3770                     HEATING\n3771        GENERAL CONSTRUCTION\n3772                     HEATING\n3773                     HEATING\n3774                     HEATING\n3775                     HEATING\n3776                     HEATING\n3777        GENERAL CONSTRUCTION\n3778                     HEATING\n3779             PAINT - PLASTER\n3780                     HEATING\n3781                     HEATING\n3782        GENERAL CONSTRUCTION\n3783                    PLUMBING\n3784                    NONCONST\n3785                     HEATING\n3786                     HEATING\n3787                    PLUMBING\n3788                     HEATING\n3789                    NONCONST\n3790                    NONCONST\n3791                   APPLIANCE\n3792                     HEATING\n3793        GENERAL CONSTRUCTION\n3794        GENERAL CONSTRUCTION\n3795                     HEATING\n3796             PAINT - PLASTER\n3797                    NONCONST\n3798                     HEATING\n3799                    PLUMBING\nName: Complaint Type, Length: 3800, dtype: object"},"output_type":"execute_result","exec_count":2}},"cell_type":"code","exec_count":2}
{"type":"cell","id":"66922b","pos":16,"input":"complaint_counts = complaints['Complaint Type'].value_counts()\ncomplaint_counts[:10]","output":{"0":{"data":{"text/plain":"Street Light Condition      402\nDOF Literature Request      311\nHEATING                     190\nBlocked Driveway            177\nNoise                       152\nIllegal Parking             137\nTraffic Signal Condition    135\nWater System                128\nNoise - Commercial           99\nSanitation Condition         99\nName: Complaint Type, dtype: int64"},"output_type":"execute_result","exec_count":9}},"cell_type":"code","exec_count":9}
{"type":"cell","id":"7b18ab","pos":41,"input":"<h2>Exercises</h2>\n<p>Use the code you have learned to calculate 5 and 10 year rolling averages for the weather data in the file champaign-wx-1888-present.csv.  Find the record extreme temperatures and precipitation</p>","cell_type":"markdown"}
{"type":"cell","id":"9a7b7f","pos":14,"input":"complaints['Complaint Type'].value_counts()","output":{"0":{"data":{"text/plain":"Street Light Condition               402\nDOF Literature Request               311\nHEATING                              190\nBlocked Driveway                     177\nNoise                                152\nIllegal Parking                      137\nTraffic Signal Condition             135\nWater System                         128\nNoise - Commercial                    99\nSanitation Condition                  99\nStreet Condition                      98\nDirty Conditions                      91\nBroken Muni Meter                     91\nGENERAL CONSTRUCTION                  85\nBuilding/Use                          84\nPLUMBING                              80\nGeneral Construction/Plumbing         75\nSewer                                 66\nTaxi Complaint                        62\nPAINT - PLASTER                       61\nConsumer Complaint                    60\nRodent                                54\nNoise - Street/Sidewalk               52\nSpecial Enforcement                   49\nDamaged Tree                          48\nMissed Collection (All Materials)     43\nRoot/Sewer/Sidewalk Condition         40\nDerelict Vehicle                      36\nDerelict Vehicles                     36\nNONCONST                              33\n                                    ... \nPlumbing                               4\nVending                                4\nUnsanitary Animal Pvt Property         4\nIndoor Sewage                          3\nStanding Water                         3\nDCA Literature Request                 3\nBridge Condition                       3\nPublic Payphone Complaint              3\nAnimal in a Park                       3\nInternal Code                          3\nHomeless Person Assistance             2\nOverflowing Litter Baskets             2\nAnimal Abuse                           2\nLead                                   2\nDrinking                               2\nFerry Inquiry                          2\nDOT Literature Request                 2\nUnleashed Dog                          2\nCurb Condition                         2\nCollection Truck Noise                 2\nBike/Roller/Skate Chronic              2\nCranes and Derricks                    2\nBike Rack Condition                    1\nCity Vehicle Placard Complaint         1\nPublic Assembly                        1\nHarboring Bees/Wasps                   1\nBeach/Pool/Sauna Complaint             1\nFound Property                         1\nPosting Advertisement                  1\nLegal Services Provider Complaint      1\nName: Complaint Type, Length: 113, dtype: int64"},"output_type":"execute_result","exec_count":8}},"cell_type":"code","exec_count":8}
{"type":"cell","id":"5ff575","pos":21,"input":"Let's break this down a bit. Discover what the interior portion of the code produces.","cell_type":"markdown"}
{"type":"cell","id":"da4bde","pos":27,"input":"Create the simplified pandas series below:","cell_type":"markdown"}
{"type":"cell","id":"f9a04a","pos":42,"input":"%matplotlib inline\nimport pandas as pd\nimport matplotlib.pyplot as plt\nweather = pd.read_csv('champaign-wx-1888-present.csv', comment = '%')\n#print(weather)\nweather[:47133]","output":{"0":{"data":{"text/html":"<div>\n<style>\n    .dataframe thead tr:only-child th {\n        text-align: right;\n    }\n\n    .dataframe thead th {\n        text-align: left;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Date</th>\n      <th>PRCP</th>\n      <th>SNOW</th>\n      <th>SNWD</th>\n      <th>TMAX</th>\n      <th>TMIN</th>\n      <th>Unnamed: 6</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>1888-09-01</td>\n      <td>0.00</td>\n      <td>M</td>\n      <td>M</td>\n      <td>72</td>\n      <td>44</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>1888-09-02</td>\n      <td>0.00</td>\n      <td>M</td>\n      <td>M</td>\n      <td>79</td>\n      <td>39</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>1888-09-03</td>\n      <td>0.00</td>\n      <td>M</td>\n      <td>M</td>\n      <td>82</td>\n      <td>42</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>1888-09-04</td>\n      <td>0.00</td>\n      <td>M</td>\n      <td>M</td>\n      <td>83</td>\n      <td>47</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>1888-09-05</td>\n      <td>0.00</td>\n      <td>M</td>\n      <td>M</td>\n      <td>76</td>\n      <td>48</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>5</th>\n      <td>1888-09-06</td>\n      <td>0.00</td>\n      <td>M</td>\n      <td>M</td>\n      <td>78</td>\n      <td>53</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>6</th>\n      <td>1888-09-07</td>\n      <td>0.00</td>\n      <td>M</td>\n      <td>M</td>\n      <td>86</td>\n      <td>52</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>7</th>\n      <td>1888-09-08</td>\n      <td>0.03</td>\n      <td>M</td>\n      <td>M</td>\n      <td>89</td>\n      <td>63</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>8</th>\n      <td>1888-09-09</td>\n      <td>0.00</td>\n      <td>M</td>\n      <td>M</td>\n      <td>81</td>\n      <td>54</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>9</th>\n      <td>1888-09-10</td>\n      <td>0.00</td>\n      <td>M</td>\n      <td>M</td>\n      <td>84</td>\n      <td>45</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>10</th>\n      <td>1888-09-11</td>\n      <td>0.00</td>\n      <td>M</td>\n      <td>M</td>\n      <td>89</td>\n      <td>54</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>11</th>\n      <td>1888-09-12</td>\n      <td>0.00</td>\n      <td>M</td>\n      <td>M</td>\n      <td>76</td>\n      <td>52</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>12</th>\n      <td>1888-09-13</td>\n      <td>0.00</td>\n      <td>M</td>\n      <td>M</td>\n      <td>69</td>\n      <td>36</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>13</th>\n      <td>1888-09-14</td>\n      <td>0.00</td>\n      <td>M</td>\n      <td>M</td>\n      <td>76</td>\n      <td>33</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>14</th>\n      <td>1888-09-15</td>\n      <td>0.55</td>\n      <td>M</td>\n      <td>M</td>\n      <td>69</td>\n      <td>49</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>15</th>\n      <td>1888-09-16</td>\n      <td>0.00</td>\n      <td>M</td>\n      <td>M</td>\n      <td>60</td>\n      <td>46</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>16</th>\n      <td>1888-09-17</td>\n      <td>0.00</td>\n      <td>M</td>\n      <td>M</td>\n      <td>56</td>\n      <td>46</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>17</th>\n      <td>1888-09-18</td>\n      <td>0.13</td>\n      <td>M</td>\n      <td>M</td>\n      <td>69</td>\n      <td>48</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>18</th>\n      <td>1888-09-19</td>\n      <td>0.17</td>\n      <td>M</td>\n      <td>M</td>\n      <td>84</td>\n      <td>46</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>19</th>\n      <td>1888-09-20</td>\n      <td>0.00</td>\n      <td>M</td>\n      <td>M</td>\n      <td>79</td>\n      <td>54</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>20</th>\n      <td>1888-09-21</td>\n      <td>0.44</td>\n      <td>M</td>\n      <td>M</td>\n      <td>74</td>\n      <td>55</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>21</th>\n      <td>1888-09-22</td>\n      <td>0.00</td>\n      <td>M</td>\n      <td>M</td>\n      <td>73</td>\n      <td>58</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>22</th>\n      <td>1888-09-23</td>\n      <td>0.00</td>\n      <td>M</td>\n      <td>M</td>\n      <td>75</td>\n      <td>50</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>23</th>\n      <td>1888-09-24</td>\n      <td>0.00</td>\n      <td>M</td>\n      <td>M</td>\n      <td>76</td>\n      <td>47</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>24</th>\n      <td>1888-09-25</td>\n      <td>0.00</td>\n      <td>M</td>\n      <td>M</td>\n      <td>75</td>\n      <td>44</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>25</th>\n      <td>1888-09-26</td>\n      <td>0.00</td>\n      <td>M</td>\n      <td>M</td>\n      <td>73</td>\n      <td>40</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>26</th>\n      <td>1888-09-27</td>\n      <td>0.00</td>\n      <td>M</td>\n      <td>M</td>\n      <td>61</td>\n      <td>40</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>27</th>\n      <td>1888-09-28</td>\n      <td>0.00</td>\n      <td>M</td>\n      <td>M</td>\n      <td>60</td>\n      <td>34</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>28</th>\n      <td>1888-09-29</td>\n      <td>0.00</td>\n      <td>M</td>\n      <td>M</td>\n      <td>58</td>\n      <td>31</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>29</th>\n      <td>1888-09-30</td>\n      <td>0.00</td>\n      <td>M</td>\n      <td>M</td>\n      <td>71</td>\n      <td>32</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>...</th>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n    </tr>\n    <tr>\n      <th>47103</th>\n      <td>2017-08-19</td>\n      <td>T</td>\n      <td>0.0</td>\n      <td>0</td>\n      <td>87</td>\n      <td>63</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>47104</th>\n      <td>2017-08-20</td>\n      <td>0.00</td>\n      <td>0.0</td>\n      <td>0</td>\n      <td>92</td>\n      <td>64</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>47105</th>\n      <td>2017-08-21</td>\n      <td>0.00</td>\n      <td>0.0</td>\n      <td>0</td>\n      <td>89</td>\n      <td>69</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>47106</th>\n      <td>2017-08-22</td>\n      <td>0.41</td>\n      <td>0.0</td>\n      <td>0</td>\n      <td>81</td>\n      <td>62</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>47107</th>\n      <td>2017-08-23</td>\n      <td>0.01</td>\n      <td>0.0</td>\n      <td>0</td>\n      <td>79</td>\n      <td>57</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>47108</th>\n      <td>2017-08-24</td>\n      <td>0.00</td>\n      <td>0.0</td>\n      <td>0</td>\n      <td>79</td>\n      <td>53</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>47109</th>\n      <td>2017-08-25</td>\n      <td>0.00</td>\n      <td>0.0</td>\n      <td>0</td>\n      <td>78</td>\n      <td>53</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>47110</th>\n      <td>2017-08-26</td>\n      <td>0.00</td>\n      <td>0.0</td>\n      <td>0</td>\n      <td>81</td>\n      <td>56</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>47111</th>\n      <td>2017-08-27</td>\n      <td>0.00</td>\n      <td>0.0</td>\n      <td>0</td>\n      <td>83</td>\n      <td>56</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>47112</th>\n      <td>2017-08-28</td>\n      <td>0.01</td>\n      <td>0.0</td>\n      <td>0</td>\n      <td>84</td>\n      <td>60</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>47113</th>\n      <td>2017-08-29</td>\n      <td>1.23</td>\n      <td>0.0</td>\n      <td>0</td>\n      <td>81</td>\n      <td>58</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>47114</th>\n      <td>2017-08-30</td>\n      <td>0.00</td>\n      <td>0.0</td>\n      <td>0</td>\n      <td>80</td>\n      <td>61</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>47115</th>\n      <td>2017-08-31</td>\n      <td>0.00</td>\n      <td>0.0</td>\n      <td>0</td>\n      <td>78</td>\n      <td>60</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>47116</th>\n      <td>2017-09-01</td>\n      <td>0.00</td>\n      <td>0.0</td>\n      <td>0</td>\n      <td>71</td>\n      <td>54</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>47117</th>\n      <td>2017-09-02</td>\n      <td>0.00</td>\n      <td>0.0</td>\n      <td>M</td>\n      <td>75</td>\n      <td>49</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>47118</th>\n      <td>2017-09-03</td>\n      <td>0.00</td>\n      <td>0.0</td>\n      <td>M</td>\n      <td>83</td>\n      <td>57</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>47119</th>\n      <td>2017-09-04</td>\n      <td>0.00</td>\n      <td>0.0</td>\n      <td>M</td>\n      <td>90</td>\n      <td>54</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>47120</th>\n      <td>2017-09-05</td>\n      <td>0.07</td>\n      <td>M</td>\n      <td>M</td>\n      <td>72</td>\n      <td>53</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>47121</th>\n      <td>2017-09-06</td>\n      <td>0.00</td>\n      <td>0.0</td>\n      <td>0</td>\n      <td>67</td>\n      <td>48</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>47122</th>\n      <td>2017-09-07</td>\n      <td>0.00</td>\n      <td>0.0</td>\n      <td>0</td>\n      <td>72</td>\n      <td>45</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>47123</th>\n      <td>2017-09-08</td>\n      <td>0.00</td>\n      <td>0.0</td>\n      <td>0</td>\n      <td>81</td>\n      <td>46</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>47124</th>\n      <td>2017-09-09</td>\n      <td>0.00</td>\n      <td>0.0</td>\n      <td>M</td>\n      <td>80</td>\n      <td>53</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>47125</th>\n      <td>2017-09-10</td>\n      <td>0.00</td>\n      <td>0.0</td>\n      <td>M</td>\n      <td>76</td>\n      <td>47</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>47126</th>\n      <td>2017-09-11</td>\n      <td>0.00</td>\n      <td>0.0</td>\n      <td>0</td>\n      <td>74</td>\n      <td>48</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>47127</th>\n      <td>2017-09-12</td>\n      <td>0.00</td>\n      <td>0.0</td>\n      <td>0</td>\n      <td>79</td>\n      <td>56</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>47128</th>\n      <td>2017-09-13</td>\n      <td>T</td>\n      <td>0.0</td>\n      <td>0</td>\n      <td>71</td>\n      <td>62</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>47129</th>\n      <td>2017-09-14</td>\n      <td>0.04</td>\n      <td>0.0</td>\n      <td>0</td>\n      <td>81</td>\n      <td>61</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>47130</th>\n      <td>2017-09-15</td>\n      <td>0.04</td>\n      <td>0.0</td>\n      <td>0</td>\n      <td>90</td>\n      <td>57</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>47131</th>\n      <td>2017-09-16</td>\n      <td>0.00</td>\n      <td>0.0</td>\n      <td>0</td>\n      <td>90</td>\n      <td>60</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>47132</th>\n      <td>2017-09-17</td>\n      <td>0.00</td>\n      <td>0.0</td>\n      <td>0</td>\n      <td>90</td>\n      <td>63</td>\n      <td>NaN</td>\n    </tr>\n  </tbody>\n</table>\n<p>47133 rows Ã— 7 columns</p>\n</div>"},"output_type":"execute_result","exec_count":35}},"cell_type":"code","exec_count":35}
{"type":"cell","id":"237d86","pos":18,"input":"complaint_counts[:10].plot(kind='bar')","output":{"0":{"data":{"text/plain":"<matplotlib.axes._subplots.AxesSubplot at 0x7fa9e1eb3128>"},"output_type":"execute_result","exec_count":10},"1":{"data":{"image/png":"309458325fa93d592127c8cd2399068415742d92"}}},"cell_type":"code","exec_count":10}
{"type":"cell","id":"fc1f2f","pos":22,"input":"complaints['Complaint Type'] == \"Noise - Street/Sidewalk\"","output":{"0":{"data":{"text/plain":"0        True\n1       False\n2       False\n3       False\n4       False\n5       False\n6       False\n7       False\n8       False\n9       False\n10      False\n11      False\n12      False\n13      False\n14      False\n15      False\n16       True\n17      False\n18      False\n19      False\n20      False\n21      False\n22      False\n23      False\n24      False\n25       True\n26      False\n27      False\n28       True\n29      False\n        ...  \n3770    False\n3771    False\n3772    False\n3773    False\n3774    False\n3775    False\n3776    False\n3777    False\n3778    False\n3779    False\n3780    False\n3781    False\n3782    False\n3783    False\n3784    False\n3785    False\n3786    False\n3787    False\n3788    False\n3789    False\n3790    False\n3791    False\n3792    False\n3793    False\n3794    False\n3795    False\n3796    False\n3797    False\n3798    False\n3799    False\nName: Complaint Type, Length: 3800, dtype: bool"},"output_type":"execute_result","exec_count":12}},"cell_type":"code","exec_count":12}
{"type":"cell","id":"25f6fc","pos":40,"input":"(noise_complaint_counts / complaint_counts.astype(float)).plot(kind='bar')","output":{"0":{"data":{"text/plain":"<matplotlib.axes._subplots.AxesSubplot at 0x7fa9e1e4d588>"},"output_type":"execute_result","exec_count":21},"1":{"data":{"image/png":"7333c5e886606a2b701273c7801f09d85ed60336"}}},"cell_type":"code","exec_count":21}
{"type":"cell","id":"5ea749","pos":5,"input":"complaints[:5]","output":{"0":{"data":{"text/html":"<div>\n<style>\n    .dataframe thead tr:only-child th {\n        text-align: right;\n    }\n\n    .dataframe thead th {\n        text-align: left;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Unnamed: 0</th>\n      <th>Unique Key</th>\n      <th>Created Date</th>\n      <th>Closed Date</th>\n      <th>Agency</th>\n      <th>Agency Name</th>\n      <th>Complaint Type</th>\n      <th>Descriptor</th>\n      <th>Location Type</th>\n      <th>Incident Zip</th>\n      <th>...</th>\n      <th>Bridge Highway Name</th>\n      <th>Bridge Highway Direction</th>\n      <th>Road Ramp</th>\n      <th>Bridge Highway Segment</th>\n      <th>Garage Lot Name</th>\n      <th>Ferry Direction</th>\n      <th>Ferry Terminal Name</th>\n      <th>Latitude</th>\n      <th>Longitude</th>\n      <th>Location</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>0</td>\n      <td>26589651</td>\n      <td>10/31/2013 02:08:41 AM</td>\n      <td>NaN</td>\n      <td>NYPD</td>\n      <td>New York City Police Department</td>\n      <td>Noise - Street/Sidewalk</td>\n      <td>Loud Talking</td>\n      <td>Street/Sidewalk</td>\n      <td>11432.0</td>\n      <td>...</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>40.708275</td>\n      <td>-73.791604</td>\n      <td>(40.70827532593202, -73.79160395779721)</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>1</td>\n      <td>26593698</td>\n      <td>10/31/2013 02:01:04 AM</td>\n      <td>NaN</td>\n      <td>NYPD</td>\n      <td>New York City Police Department</td>\n      <td>Illegal Parking</td>\n      <td>Commercial Overnight Parking</td>\n      <td>Street/Sidewalk</td>\n      <td>11378.0</td>\n      <td>...</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>40.721041</td>\n      <td>-73.909453</td>\n      <td>(40.721040535628305, -73.90945306791765)</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>2</td>\n      <td>26594139</td>\n      <td>10/31/2013 02:00:24 AM</td>\n      <td>10/31/2013 02:40:32 AM</td>\n      <td>NYPD</td>\n      <td>New York City Police Department</td>\n      <td>Noise - Commercial</td>\n      <td>Loud Music/Party</td>\n      <td>Club/Bar/Restaurant</td>\n      <td>10032.0</td>\n      <td>...</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>40.843330</td>\n      <td>-73.939144</td>\n      <td>(40.84332975466513, -73.93914371913482)</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>3</td>\n      <td>26595721</td>\n      <td>10/31/2013 01:56:23 AM</td>\n      <td>10/31/2013 02:21:48 AM</td>\n      <td>NYPD</td>\n      <td>New York City Police Department</td>\n      <td>Noise - Vehicle</td>\n      <td>Car/Truck Horn</td>\n      <td>Street/Sidewalk</td>\n      <td>10023.0</td>\n      <td>...</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>40.778009</td>\n      <td>-73.980213</td>\n      <td>(40.7780087446372, -73.98021349023975)</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>4</td>\n      <td>26590930</td>\n      <td>10/31/2013 01:53:44 AM</td>\n      <td>NaN</td>\n      <td>DOHMH</td>\n      <td>Department of Health and Mental Hygiene</td>\n      <td>Rodent</td>\n      <td>Condition Attracting Rodents</td>\n      <td>Vacant Lot</td>\n      <td>10027.0</td>\n      <td>...</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>40.807691</td>\n      <td>-73.947387</td>\n      <td>(40.80769092704951, -73.94738703491433)</td>\n    </tr>\n  </tbody>\n</table>\n<p>5 rows Ã— 53 columns</p>\n</div>"},"output_type":"execute_result","exec_count":3}},"cell_type":"code","exec_count":3}
{"type":"cell","id":"dfc2fa","pos":30,"input":"arr = pd.Series([1,2,3]).values\narr !=2","output":{"0":{"data":{"text/plain":"array([ True, False,  True], dtype=bool)"},"output_type":"execute_result","exec_count":16}},"cell_type":"code","exec_count":16}
{"type":"cell","id":"16c18c","pos":4,"input":"You can also select just the first five rows as follows:","cell_type":"markdown"}
{"type":"cell","id":"03ea13","pos":38,"input":"noise_complaint_counts / complaint_counts.astype(float)","output":{"0":{"data":{"text/plain":"BRONX            0.020179\nBROOKLYN         0.007394\nMANHATTAN        0.030588\nQUEENS           0.006857\nSTATEN ISLAND    0.016304\nUnspecified           NaN\nName: Borough, dtype: float64"},"output_type":"execute_result","exec_count":23}},"cell_type":"code","exec_count":23}
{"type":"cell","id":"ab34e5","pos":9,"input":"complaints['Complaint Type'][:5]","output":{"0":{"data":{"text/plain":"0    Noise - Street/Sidewalk\n1            Illegal Parking\n2         Noise - Commercial\n3            Noise - Vehicle\n4                     Rodent\nName: Complaint Type, dtype: object"},"output_type":"execute_result","exec_count":5}},"cell_type":"code","exec_count":5}
{"type":"cell","id":"084ae1","pos":33,"input":"In actuality, this method of querying dataframes actually comes from NumPy. Imagine the ease of identifying 'NaN' in your data, and omitting it. Now we can put our methods to use to find the noisiest of NY Borough's.","cell_type":"markdown"}
{"type":"cell","id":"fa42f6","pos":17,"input":"<h2>#4 Make plots with one line</h2>","cell_type":"markdown"}
{"type":"cell","id":"6bac75","pos":43,"input":"","cell_type":"code","exec_count":0}
{"type":"cell","id":"77733a","pos":26,"input":"print(type(complaints['Unique Key']))\nprint(type(complaints['Unique Key'].values))","output":{"0":{"name":"stdout","output_type":"stream","text":"<class 'pandas.core.series.Series'>\n<class 'numpy.ndarray'>\n"}},"cell_type":"code","exec_count":14}
{"type":"cell","id":"2470ea","pos":24,"input":"is_noise = complaints['Complaint Type'] == \"Noise - Street/Sidewalk\"\nin_brooklyn = complaints['Borough'] == \"BROOKLYN\"\ncomplaints[is_noise & in_brooklyn][:5]","output":{"0":{"data":{"text/html":"<div>\n<style>\n    .dataframe thead tr:only-child th {\n        text-align: right;\n    }\n\n    .dataframe thead th {\n        text-align: left;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Unnamed: 0</th>\n      <th>Unique Key</th>\n      <th>Created Date</th>\n      <th>Closed Date</th>\n      <th>Agency</th>\n      <th>Agency Name</th>\n      <th>Complaint Type</th>\n      <th>Descriptor</th>\n      <th>Location Type</th>\n      <th>Incident Zip</th>\n      <th>...</th>\n      <th>Bridge Highway Name</th>\n      <th>Bridge Highway Direction</th>\n      <th>Road Ramp</th>\n      <th>Bridge Highway Segment</th>\n      <th>Garage Lot Name</th>\n      <th>Ferry Direction</th>\n      <th>Ferry Terminal Name</th>\n      <th>Latitude</th>\n      <th>Longitude</th>\n      <th>Location</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>31</th>\n      <td>31</td>\n      <td>26595564</td>\n      <td>10/31/2013 12:30:36 AM</td>\n      <td>NaN</td>\n      <td>NYPD</td>\n      <td>New York City Police Department</td>\n      <td>Noise - Street/Sidewalk</td>\n      <td>Loud Music/Party</td>\n      <td>Street/Sidewalk</td>\n      <td>11236.0</td>\n      <td>...</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>40.634104</td>\n      <td>-73.911055</td>\n      <td>(40.634103775951736, -73.91105541883589)</td>\n    </tr>\n    <tr>\n      <th>49</th>\n      <td>49</td>\n      <td>26595553</td>\n      <td>10/31/2013 12:05:10 AM</td>\n      <td>10/31/2013 02:43:43 AM</td>\n      <td>NYPD</td>\n      <td>New York City Police Department</td>\n      <td>Noise - Street/Sidewalk</td>\n      <td>Loud Talking</td>\n      <td>Street/Sidewalk</td>\n      <td>11225.0</td>\n      <td>...</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>40.661793</td>\n      <td>-73.959934</td>\n      <td>(40.6617931276793, -73.95993363978067)</td>\n    </tr>\n    <tr>\n      <th>109</th>\n      <td>109</td>\n      <td>26594653</td>\n      <td>10/30/2013 11:26:32 PM</td>\n      <td>10/31/2013 12:18:54 AM</td>\n      <td>NYPD</td>\n      <td>New York City Police Department</td>\n      <td>Noise - Street/Sidewalk</td>\n      <td>Loud Music/Party</td>\n      <td>Street/Sidewalk</td>\n      <td>11222.0</td>\n      <td>...</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>40.724600</td>\n      <td>-73.954271</td>\n      <td>(40.724599563793525, -73.95427134534344)</td>\n    </tr>\n    <tr>\n      <th>236</th>\n      <td>236</td>\n      <td>26591992</td>\n      <td>10/30/2013 10:02:58 PM</td>\n      <td>10/30/2013 10:23:20 PM</td>\n      <td>NYPD</td>\n      <td>New York City Police Department</td>\n      <td>Noise - Street/Sidewalk</td>\n      <td>Loud Talking</td>\n      <td>Street/Sidewalk</td>\n      <td>11218.0</td>\n      <td>...</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>40.636169</td>\n      <td>-73.972455</td>\n      <td>(40.63616876563881, -73.97245504682485)</td>\n    </tr>\n    <tr>\n      <th>370</th>\n      <td>370</td>\n      <td>26594167</td>\n      <td>10/30/2013 08:38:25 PM</td>\n      <td>10/30/2013 10:26:28 PM</td>\n      <td>NYPD</td>\n      <td>New York City Police Department</td>\n      <td>Noise - Street/Sidewalk</td>\n      <td>Loud Music/Party</td>\n      <td>Street/Sidewalk</td>\n      <td>11218.0</td>\n      <td>...</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>40.642922</td>\n      <td>-73.978762</td>\n      <td>(40.6429222774404, -73.97876175474585)</td>\n    </tr>\n  </tbody>\n</table>\n<p>5 rows Ã— 53 columns</p>\n</div>"},"output_type":"execute_result","exec_count":13}},"cell_type":"code","exec_count":13}
{"type":"cell","id":"4a02b3","pos":31,"input":"Does the above output in the form of a Boolean array look familiar? Try the following:","cell_type":"markdown"}
{"type":"cell","id":"d59e52","pos":2,"input":"<h2>#1 Selecting columns and rows</h2>\n<p>To select a column, we index with the name of the column, like this:</p>","cell_type":"markdown"}
{"type":"cell","id":"c53b9c","pos":23,"input":"This is a big array of Trues and Falses, one for each row in our dataframe. When we index our dataframe with this array, we get just the rows where our boolean array evaluated to True. It's important to note that for row filtering by a boolean array the length of our dataframe's index must be the same length as the boolean array used for filtering.\nYou can also combine more than one condition with the & operator like this:","cell_type":"markdown"}
{"type":"cell","id":"3d1057","pos":7,"input":"complaints[:5]['Complaint Type']","output":{"0":{"data":{"text/plain":"0    Noise - Street/Sidewalk\n1            Illegal Parking\n2         Noise - Commercial\n3            Noise - Vehicle\n4                     Rodent\nName: Complaint Type, dtype: object"},"output_type":"execute_result","exec_count":4}},"cell_type":"code","exec_count":4}
{"type":"cell","id":"df4231","pos":15,"input":"Now find the top ten!","cell_type":"markdown"}
{"type":"cell","id":"70d74e","pos":29,"input":"Now let's try some NumPy commands to pull out all of the values which are not the number two.","cell_type":"markdown"}
{"type":"cell","id":"76da8b","pos":39,"input":"Another quick plot!","cell_type":"markdown"}
{"type":"cell","id":"e5a01f","pos":10,"input":"<h2>#2 Selecting multiple columns</h2>\n<p>What if we just want to know the complaint type and the borough, but not the rest of the information? Pandas makes it really easy to select a subset of the columns: just index with list of columns you want.</p>","cell_type":"markdown"}